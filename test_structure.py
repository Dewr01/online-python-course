#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã FastAPI –ø—Ä–æ–µ–∫—Ç–∞
"""
import os
import json
from pathlib import Path


def test_project_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ FastAPI...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    required_files = [
        "main.py",
        "requirements.txt",
        "templates/index.html",
        "static/style.css",
        "data/modules/manifest.json"
    ]

    missing_files = []
    for file_path in required_files:
        if not Path(file_path).exists():
            missing_files.append(file_path)
        else:
            print(f"‚úÖ {file_path}")

    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {missing_files}")
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–Ω–∏—Ñ–µ—Å—Ç –º–æ–¥—É–ª–µ–π
    try:
        with open("data/modules/manifest.json", 'r', encoding='utf-8') as f:
            manifest = json.load(f)
            modules = manifest.get("modules", [])
            print(f"‚úÖ –ú–∞–Ω–∏—Ñ–µ—Å—Ç –∑–∞–≥—Ä—É–∂–µ–Ω: {len(modules)} –º–æ–¥—É–ª–µ–π")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –º–æ–¥—É–ª–µ–π
            total_topics = 0
            for module in modules:
                topics = module.get("topics", [])
                total_topics += len(topics)

                for topic in topics:
                    topic_path = topic.get("path", "")
                    if Path(topic_path).exists():
                        print(f"‚úÖ {topic_path}")
                    else:
                        print(f"‚ùå {topic_path}")

            print(f"‚úÖ –í—Å–µ–≥–æ —Ç–µ–º: {total_topics}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞: {e}")
        return False

    print("üéâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!")
    return True


def test_json_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç JSON —Ñ–∞–π–ª—ã –º–æ–¥—É–ª–µ–π"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ JSON —Ñ–∞–π–ª–æ–≤ –º–æ–¥—É–ª–µ–π...")

    try:
        with open("data/modules/manifest.json", 'r', encoding='utf-8') as f:
            manifest = json.load(f)

        for module in manifest.get("modules", []):
            for topic in module.get("topics", []):
                topic_path = topic.get("path", "")
                if Path(topic_path).exists():
                    try:
                        with open(topic_path, 'r', encoding='utf-8') as f:
                            topic_data = json.load(f)

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                        required_fields = ["title", "theory", "tasks"]
                        for field in required_fields:
                            if field not in topic_data:
                                print(f"‚ùå {topic_path}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ '{field}'")
                                continue

                        tasks = topic_data.get("tasks", [])
                        print(f"‚úÖ {topic_path}: {len(tasks)} –∑–∞–¥–∞–Ω–∏–π")

                    except json.JSONDecodeError as e:
                        print(f"‚ùå {topic_path}: –æ—à–∏–±–∫–∞ JSON - {e}")
                    except Exception as e:
                        print(f"‚ùå {topic_path}: –æ—à–∏–±–∫–∞ - {e}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ JSON —Ñ–∞–π–ª–æ–≤: {e}")
        return False

    print("üéâ JSON —Ñ–∞–π–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!")
    return True


if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ FastAPI")
    print("=" * 50)

    structure_ok = test_project_structure()
    json_ok = test_json_files()

    print("\n" + "=" * 50)
    if structure_ok and json_ok:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.")
        print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("python main.py")
        print("\n–ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8000")
    else:
        print("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞.")
