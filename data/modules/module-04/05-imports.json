{
    "tasks": [
        {
            "answer": "import math",
            "hint": "import –∏–º—è_–º–æ–¥—É–ª—è",
            "id": "m4t17",
            "question": "–ö–∞–∫ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å math?"
        },
        {
            "answer": "from math import sqrt",
            "hint": "from –º–æ–¥—É–ª—å import —Ñ—É–Ω–∫—Ü–∏—è",
            "id": "m4t18",
            "question": "–ö–∞–∫ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏—é sqrt –∏–∑ math?"
        },
        {
            "answer": "import math as m",
            "hint": "import –º–æ–¥—É–ª—å as –ø—Å–µ–≤–¥–æ–Ω–∏–º",
            "id": "m4t19",
            "question": "–ö–∞–∫ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å math —Å –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–º m?"
        },
        {
            "answer": "datetime",
            "hint": "–ú–æ–¥—É–ª—å datetime –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º.",
            "id": "m4t20",
            "question": "–ö–∞–∫–æ–π –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏?"
        }
    ],
    "theory": "**–ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π** ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≥–æ—Ç–æ–≤–æ–≥–æ –∫–æ–¥–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Python. –≠—Ç–æ –æ—Å–Ω–æ–≤–∞ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞!\nüì¶ **–°–ø–æ—Å–æ–±—ã –∏–º–ø–æ—Ä—Ç–∞**:\n\n**1. –ò–º–ø–æ—Ä—Ç –≤—Å–µ–≥–æ –º–æ–¥—É–ª—è**:\n```python\nimport math\nimport random\nimport datetime\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º –º–æ–¥—É–ª—è\nprint(math.sqrt(16))        # 4.0\nprint(random.randint(1, 10)) # –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10\nprint(datetime.datetime.now()) # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è\n```\n\n**2. –ò–º–ø–æ—Ä—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π**:\n```python\nfrom math import sqrt, pi, sin\nfrom random import choice, shuffle\nfrom datetime import date\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞\nprint(sqrt(25))              # 5.0\nprint(pi)                    # 3.141592653589793\nprint(choice(['a', 'b', 'c'])) # –°–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç\nprint(date.today())          # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞\n```\n\n**3. –ò–º–ø–æ—Ä—Ç —Å –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–º**:\n```python\nimport math as m\nimport datetime as dt\nimport random as r\n\nprint(m.sqrt(36))            # 6.0\nprint(dt.datetime.now())     # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è\nprint(r.random())            # –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1\n```\n\n**4. –ò–º–ø–æ—Ä—Ç –≤—Å–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ (–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)**:\n```python\nfrom math import *  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏\n\nprint(sqrt(49))     # 7.0 (–±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ math.)\nprint(pi)           # 3.141592653589793\n```\n\nüîß **–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥—É–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏**:\n\n**math ‚Äî –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏**:\n```python\nimport math\n\nprint(math.sqrt(16))        # 4.0\nprint(math.pow(2, 3))       # 8.0\nprint(math.sin(math.pi/2))  # 1.0\nprint(math.ceil(4.2))       # 5 (–æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö)\nprint(math.floor(4.8))      # 4 (–æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤–Ω–∏–∑)\nprint(math.factorial(5))    # 120\n```\n\n**random ‚Äî –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª**:\n```python\nimport random\n\nprint(random.random())           # –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ 0.0-1.0\nprint(random.randint(1, 10))     # –°–ª—É—á–∞–π–Ω–æ–µ —Ü–µ–ª–æ–µ 1-10\nprint(random.choice(['a', 'b', 'c'])) # –°–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç\n\n# –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞\ncards = ['A', 'K', 'Q', 'J']\nrandom.shuffle(cards)\nprint(cards)  # ['Q', 'A', 'J', 'K'] (—Å–ª—É—á–∞–π–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫)\n```\n\n**datetime ‚Äî —Ä–∞–±–æ—Ç–∞ —Å –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º**:\n```python\nfrom datetime import datetime, date, timedelta\n\n# –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è\nnow = datetime.now()\nprint(now)  # 2024-01-15 14:30:25.123456\n\n# –¢–æ–ª—å–∫–æ –¥–∞—Ç–∞\ntoday = date.today()\nprint(today)  # 2024-01-15\n\n# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –¥–∞—Ç—ã\nbirthday = date(1990, 5, 15)\nprint(birthday)  # 1990-05-15\n\n# –ê—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞ —Å –¥–∞—Ç–∞–º–∏\nage = today - birthday\nprint(age.days)  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π\n\n# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏\ntomorrow = today + timedelta(days=1)\nprint(tomorrow)  # 2024-01-16\n```\n\n**os ‚Äî —Ä–∞–±–æ—Ç–∞ —Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π**:\n```python\nimport os\n\n# –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è\nprint(os.getcwd())  # /path/to/current/directory\n\n# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏\nfiles = os.listdir('.')\nprint(files)  # ['file1.py', 'file2.txt', ...]\n\n# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞\nif os.path.exists('myfile.txt'):\n    print('–§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')\n\n# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏\nos.makedirs('new_folder', exist_ok=True)\n```\n\n**json ‚Äî —Ä–∞–±–æ—Ç–∞ —Å JSON**:\n```python\nimport json\n\n# –°–ª–æ–≤–∞—Ä—å –≤ JSON\ndata = {'name': '–ê–Ω–Ω–∞', 'age': 25, 'city': '–ú–æ—Å–∫–≤–∞'}\njson_string = json.dumps(data, ensure_ascii=False)\nprint(json_string)  # {\"name\": \"–ê–Ω–Ω–∞\", \"age\": 25, \"city\": \"–ú–æ—Å–∫–≤–∞\"}\n\n# JSON –≤ —Å–ª–æ–≤–∞—Ä—å\nparsed_data = json.loads(json_string)\nprint(parsed_data['name'])  # –ê–Ω–Ω–∞\n\n# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª\nwith open('data.json', 'w', encoding='utf-8') as f:\n    json.dump(data, f, ensure_ascii=False)\n\n# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞\nwith open('data.json', 'r', encoding='utf-8') as f:\n    loaded_data = json.load(f)\n```\n\nüí° **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã**:\n\n**–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª–µ–π**:\n```python\nimport random\nimport string\n\ndef generate_password(length=8):\n    characters = string.ascii_letters + string.digits + '!@#$%'\n    password = ''.join(random.choice(characters) for _ in range(length))\n    return password\n\nprint(generate_password(12))  # –°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–∑ 12 —Å–∏–º–≤–æ–ª–æ–≤\n```\n\n**–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏**:\n```python\nfrom datetime import datetime, timedelta\n\ndef time_until_birthday(birth_month, birth_day):\n    today = datetime.now()\n    this_year_birthday = datetime(today.year, birth_month, birth_day)\n    \n    if this_year_birthday < today:\n        this_year_birthday = datetime(today.year + 1, birth_month, birth_day)\n    \n    days_until = (this_year_birthday - today).days\n    return days_until\n\nprint(f\"–î–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è: {time_until_birthday(5, 15)} –¥–Ω–µ–π\")\n```\n\n**–ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–æ–≤**:\n```python\nimport os\nimport json\nfrom datetime import datetime\n\ndef analyze_directory(path):\n    files_info = []\n    \n    for filename in os.listdir(path):\n        file_path = os.path.join(path, filename)\n        if os.path.isfile(file_path):\n            stat = os.stat(file_path)\n            files_info.append({\n                'name': filename,\n                'size': stat.st_size,\n                'modified': datetime.fromtimestamp(stat.st_mtime)\n            })\n    \n    return files_info\n\n# –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏\nfiles = analyze_directory('.')\nfor file_info in files:\n    print(f\"{file_info['name']}: {file_info['size']} –±–∞–π—Ç\")\n```\n\n‚ö†Ô∏è **–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∞**:\n- **–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ** ‚Äî `from math import sqrt` –ª—É—á—à–µ —á–µ–º `import math`\n- **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Å–µ–≤–¥–æ–Ω–∏–º—ã –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö –∏–º–µ–Ω** ‚Äî `import numpy as np`\n- **–ì—Ä—É–ø–ø–∏—Ä—É–π—Ç–µ –∏–º–ø–æ—Ä—Ç—ã** ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –º–æ–¥—É–ª–∏, –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏\n- **–ò–∑–±–µ–≥–∞–π—Ç–µ `from module import *`** ‚Äî –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º –∏–º–µ–Ω\n- **–ò–º–ø–æ—Ä—Ç—ã –≤ –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞** ‚Äî –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏",
    "title": "–ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π"
}