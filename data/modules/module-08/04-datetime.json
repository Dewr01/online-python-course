{
    "title": "datetime",
    "theory": "**Модуль datetime** — мощный инструмент для работы с датами и временем в Python.\n## Основные классы\n\n**1. datetime** — дата и время:\n```python\nfrom datetime import datetime\n\n# Текущая дата и время\nnow = datetime.now()\nprint(now)  # 2024-01-15 14:30:25.123456\n\n# Создание конкретной даты и времени\ndt = datetime(2024, 1, 15, 14, 30, 0)\nprint(dt)  # 2024-01-15 14:30:00\n```\n\n**2. date** — только дата:\n```python\nfrom datetime import date\n\n# Текущая дата\ntoday = date.today()\nprint(today)  # 2024-01-15\n\n# Создание конкретной даты\nbirthday = date(1990, 5, 20)\nprint(birthday)  # 1990-05-20\n```\n\n**3. time** — только время:\n```python\nfrom datetime import time\n\n# Создание времени\nt = time(14, 30, 0)  # 14:30:00\nprint(t)  # 14:30:00\n```\n\n**4. timedelta** — разность времени:\n```python\nfrom datetime import datetime, timedelta\n\n# Текущее время\nnow = datetime.now()\n\n# Добавление времени\nfuture = now + timedelta(days=7, hours=3, minutes=30)\nprint(future)\n\n# Разность между датами\ndiff = future - now\nprint(diff.days)  # 7\nprint(diff.seconds)  # 12600 (3.5 часа в секундах)\n```\n\n## Форматирование дат\n\n**strftime()** — дата в строку:\n```python\nnow = datetime.now()\n\n# Различные форматы\nprint(now.strftime(\"%Y-%m-%d\"))  # 2024-01-15\nprint(now.strftime(\"%d.%m.%Y\"))  # 15.01.2024\nprint(now.strftime(\"%H:%M:%S\"))  # 14:30:25\nprint(now.strftime(\"%A, %d %B %Y\"))  # Monday, 15 January 2024\n\n# Русская локализация (требует настройки)\nprint(now.strftime(\"%d %B %Y\"))  # 15 January 2024\n```\n\n**strptime()** — строка в дату:\n```python\n# Парсинг строки в дату\ndate_string = \"15.01.2024 14:30\"\ndt = datetime.strptime(date_string, \"%d.%m.%Y %H:%M\")\nprint(dt)  # 2024-01-15 14:30:00\n```\n\n## Работа с временными зонами\n\n```python\nfrom datetime import datetime, timezone, timedelta\n\n# UTC время\nutc_now = datetime.now(timezone.utc)\nprint(utc_now)  # 2024-01-15 11:30:25+00:00\n\n# Локальная временная зона\nmoscow_tz = timezone(timedelta(hours=3))\nmoscow_time = datetime.now(moscow_tz)\nprint(moscow_time)  # 2024-01-15 14:30:25+03:00\n```\n\n## Практические примеры\n\n**Вычисление возраста:**\n```python\nfrom datetime import date\n\ndef calculate_age(birth_date):\n    today = date.today()\n    age = today.year - birth_date.year\n    if today.month < birth_date.month or \\\n       (today.month == birth_date.month and today.day < birth_date.day):\n        age -= 1\n    return age\n\nbirthday = date(1990, 5, 20)\nage = calculate_age(birthday)\nprint(f\"Возраст: {age} лет\")\n```\n\n**Работа с рабочими днями:**\n```python\nfrom datetime import datetime, timedelta\n\ndef add_work_days(start_date, days):\n    current = start_date\n    added_days = 0\n    \n    while added_days < days:\n        current += timedelta(days=1)\n        # Пропускаем выходные (0=понедельник, 6=воскресенье)\n        if current.weekday() < 5:\n            added_days += 1\n    \n    return current\n\n# Добавляем 5 рабочих дней\nstart = datetime(2024, 1, 15)  # понедельник\nresult = add_work_days(start, 5)\nprint(result)  # 2024-01-22 (понедельник)\n```\n\n**Часто используемые форматы:**\n- `%Y` — год (4 цифры)\n- `%m` — месяц (01-12)\n- `%d` — день (01-31)\n- `%H` — час (00-23)\n- `%M` — минута (00-59)\n- `%S` — секунда (00-59)\n- `%A` — день недели (полное название)\n- `%B` — месяц (полное название)",
    "tasks": [
        {
            "id": "m8t13",
            "question": "Как получить текущую дату и время?",
            "answer": "datetime.now()",
            "hint": "datetime.datetime.now()"
        },
        {
            "id": "m8t14",
            "question": "Как отформатировать дату в строку?",
            "answer": "strftime()",
            "hint": "Метод strftime(формат)."
        },
        {
            "id": "m8t15",
            "question": "Как создать объект даты из строки?",
            "answer": "strptime()",
            "hint": "datetime.strptime(строка, формат)."
        },
        {
            "id": "m8t16",
            "question": "Что такое timedelta?",
            "answer": "разность времени",
            "hint": "timedelta представляет разность между датами."
        }
    ]
}
