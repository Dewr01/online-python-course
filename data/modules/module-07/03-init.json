{
    "title": "Конструктор __init__",
    "theory": "**Конструктор `__init__`** — специальный метод для инициализации объектов.\n**Что это такое:**\n- `__init__` — это метод, который автоматически вызывается при создании объекта\n- Используется для установки начальных значений атрибутов\n- Может принимать параметры для настройки объекта\n\n**Синтаксис:**\n```python\nclass Person:\n    def __init__(self, name, age=0):\n        self.name = name\n        self.age = age\n        self.is_adult = age >= 18\n```\n\n**Ключевые особенности:**\n- Первый параметр всегда `self` — ссылка на создаваемый объект\n- Вызывается автоматически при `Person(\"Анна\", 25)`\n- Может иметь значения по умолчанию: `age=0`\n- Может выполнять любую логику инициализации\n\n**Примеры использования:**\n```python\n# Создание объектов\nperson1 = Person(\"Иван\", 30)\nperson2 = Person(\"Мария\")  # age будет 0\n\n# Проверка инициализации\nprint(person1.name)  # Иван\nprint(person1.is_adult)  # True\nprint(person2.age)  # 0\n```\n\n**Важно:** Если не определить `__init__`, Python создаст пустой объект без атрибутов.",
    "tasks": [
        {
            "id": "m7t9",
            "question": "Как называется специальный метод конструктора?",
            "answer": "__init__",
            "hint": "Два подчеркивания с каждой стороны."
        },
        {
            "id": "m7t10",
            "question": "Когда вызывается __init__?",
            "answer": "при создании объекта",
            "hint": "Автоматически при создании экземпляра класса."
        },
        {
            "id": "m7t11",
            "question": "Как инициализировать атрибут в __init__?",
            "answer": "self.attr = value",
            "hint": "self.имя_атрибута = значение"
        },
        {
            "id": "m7t12",
            "question": "Можно ли передать параметры в __init__? (да/нет)",
            "answer": "да",
            "hint": "def __init__(self, param1, param2):"
        }
    ]
}
