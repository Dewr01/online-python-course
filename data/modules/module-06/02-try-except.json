{
    "tasks": [
        {
            "answer": "try: x/0 except ZeroDivisionError: pass",
            "hint": "try: –∫–æ–¥ except –¢–∏–ø–û—à–∏–±–∫–∏: –æ–±—Ä–∞–±–æ—Ç–∫–∞",
            "id": "m6t5",
            "question": "–ö–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å?"
        },
        {
            "answer": "except Exception:",
            "hint": "except Exception: –ª–æ–≤–∏—Ç –≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è.",
            "id": "m6t6",
            "question": "–ö–∞–∫ –ø–æ–π–º–∞—Ç—å –ª—é–±—É—é –æ—à–∏–±–∫—É?"
        },
        {
            "answer": "except –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è",
            "hint": "except –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—à–∏–±–∫–µ –≤ try.",
            "id": "m6t7",
            "question": "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤ try?"
        },
        {
            "answer": "–¥–∞",
            "hint": "–ú–æ–∂–Ω–æ –ª–æ–≤–∏—Ç—å —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫ –æ—Ç–¥–µ–ª—å–Ω–æ.",
            "id": "m6t8",
            "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏–º–µ—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ except –±–ª–æ–∫–æ–≤? (–¥–∞/–Ω–µ—Ç)"
        }
    ],
    "theory": "**try/except** ‚Äî —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤ Python! –≠—Ç–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –æ—à–∏–±–∫–∏ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É.\nüîß **–ë–∞–∑–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å**:\n```python\ntry:\n    # –ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É\n    risky_operation()\nexcept –¢–∏–ø–û—à–∏–±–∫–∏:\n    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏\n    handle_error()\n```\n\n**–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä**:\n```python\ntry:\n    number = int(input(\"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: \"))\n    result = 10 / number\n    print(f\"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}\")\nexcept ValueError:\n    print(\"–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ\")\nexcept ZeroDivisionError:\n    print(\"–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å\")\n```\n\nüéØ **–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫**:\n\n**–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ except –±–ª–æ–∫–∏**:\n```python\ndef safe_divide(a, b):\n    try:\n        result = a / b\n        return result\n    except TypeError:\n        print(\"–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö\")\n        return None\n    except ZeroDivisionError:\n        print(\"–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å\")\n        return None\n    except Exception as e:\n        print(f\"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}\")\n        return None\n\n# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\nprint(safe_divide(10, 2))    # 5.0\nprint(safe_divide(10, 0))    # None (ZeroDivisionError)\nprint(safe_divide(\"10\", 2))  # None (TypeError)\n```\n\n**–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–∏–ø–æ–≤ –≤ –æ–¥–Ω–æ–º except**:\n```python\ndef process_data(data):\n    try:\n        # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É\n        if isinstance(data, list):\n            return data[0]\n        elif isinstance(data, dict):\n            return data['value']\n        else:\n            return str(data)\n    except (IndexError, KeyError) as e:\n        print(f\"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º: {e}\")\n        return None\n    except Exception as e:\n        print(f\"–û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}\")\n        return None\n\n# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\nprint(process_data([1, 2, 3]))        # 1\nprint(process_data([]))               # None (IndexError)\nprint(process_data({'name': '–ê–Ω–Ω–∞'})) # None (KeyError)\nprint(process_data('—Å—Ç—Ä–æ–∫–∞'))         # —Å—Ç—Ä–æ–∫–∞\n```\n\n**–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–µ**:\n```python\ndef analyze_file(filename):\n    try:\n        with open(filename, 'r', encoding='utf-8') as file:\n            content = file.read()\n            return len(content)\n    except FileNotFoundError as e:\n        print(f\"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}\")\n        return 0\n    except PermissionError as e:\n        print(f\"–ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞: {e}\")\n        return 0\n    except UnicodeDecodeError as e:\n        print(f\"–û—à–∏–±–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏: {e}\")\n        return 0\n    except Exception as e:\n        print(f\"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {type(e).__name__}: {e}\")\n        return 0\n\n# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\nsize = analyze_file('nonexistent.txt')\nprint(f\"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size} —Å–∏–º–≤–æ–ª–æ–≤\")\n```\n\nüí° **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã**:\n\n**–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä**:\n```python\ndef safe_calculator(operation, a, b):\n    \"\"\"–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫\"\"\"\n    try:\n        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–∞\n        num_a = float(a)\n        num_b = float(b)\n        \n        # –í—ã–ø–æ–ª–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é\n        if operation == '+':\n            return num_a + num_b\n        elif operation == '-':\n            return num_a - num_b\n        elif operation == '*':\n            return num_a * num_b\n        elif operation == '/':\n            if num_b == 0:\n                raise ValueError(\"–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å\")\n            return num_a / num_b\n        else:\n            raise ValueError(f\"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: {operation}\")\n            \n    except ValueError as e:\n        print(f\"–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞: {e}\")\n        return None\n    except Exception as e:\n        print(f\"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}\")\n        return None\n\n# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\nprint(safe_calculator('+', '5', '3'))     # 8.0\nprint(safe_calculator('/', '10', '0'))    # None (–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å)\nprint(safe_calculator('*', 'abc', '2'))   # None (–Ω–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥)\nprint(safe_calculator('^', '2', '3'))     # None (–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è)\n```\n\n**–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞**:\n```python\ndef get_user_age():\n    \"\"\"–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\"\"\"\n    while True:\n        try:\n            age_input = input(\"–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç: \")\n            age = int(age_input)\n            \n            if age < 0:\n                print(\"–í–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º\")\n                continue\n            elif age > 150:\n                print(\"–í–æ–∑—Ä–∞—Å—Ç —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π\")\n                continue\n                \n            return age\n            \n        except ValueError:\n            print(\"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ\")\n        except KeyboardInterrupt:\n            print(\"\\n–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞\")\n            return None\n        except Exception as e:\n            print(f\"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}\")\n            return None\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\nage = get_user_age()\nif age is not None:\n    print(f\"–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: {age} –ª–µ—Ç\")\n```\n\n**–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞**:\n```python\ndef process_student_grades(filename):\n    \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ü–µ–Ω–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞\"\"\"\n    students = []\n    \n    try:\n        with open(filename, 'r', encoding='utf-8') as file:\n            for line_num, line in enumerate(file, 1):\n                try:\n                    # –ü–∞—Ä—Å–∏–º —Å—Ç—Ä–æ–∫—É: –∏–º—è,–æ—Ü–µ–Ω–∫–∞1,–æ—Ü–µ–Ω–∫–∞2,–æ—Ü–µ–Ω–∫–∞3\n                    parts = line.strip().split(',')\n                    if len(parts) != 4:\n                        print(f\"–°—Ç—Ä–æ–∫–∞ {line_num}: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç\")\n                        continue\n                    \n                    name = parts[0].strip()\n                    grades = [int(grade.strip()) for grade in parts[1:]]\n                    \n                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ü–µ–Ω–∫–∏\n                    if any(grade < 0 or grade > 100 for grade in grades):\n                        print(f\"–°—Ç—Ä–æ–∫–∞ {line_num}: –Ω–µ–≤–µ—Ä–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏ –¥–ª—è {name}\")\n                        continue\n                    \n                    students.append({\n                        'name': name,\n                        'grades': grades,\n                        'average': sum(grades) / len(grades)\n                    })\n                    \n                except ValueError as e:\n                    print(f\"–°—Ç—Ä–æ–∫–∞ {line_num}: –æ—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è - {e}\")\n                except Exception as e:\n                    print(f\"–°—Ç—Ä–æ–∫–∞ {line_num}: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ - {e}\")\n    \n    except FileNotFoundError:\n        print(f\"–§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω\")\n        return []\n    except Exception as e:\n        print(f\"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}\")\n        return []\n    \n    return students\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\nstudents = process_student_grades('grades.txt')\nfor student in students:\n    print(f\"{student['name']}: {student['average']:.1f}\")\n```\n\n**–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤**:\n```python\nimport urllib.request\nimport json\n\ndef fetch_user_data(user_id):\n    \"\"\"–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å API\"\"\"\n    try:\n        url = f\"https://api.example.com/users/{user_id}\"\n        \n        with urllib.request.urlopen(url, timeout=10) as response:\n            data = json.loads(response.read().decode('utf-8'))\n            return data\n            \n    except urllib.error.HTTPError as e:\n        if e.code == 404:\n            print(f\"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω\")\n        elif e.code == 403:\n            print(\"–ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞\")\n        else:\n            print(f\"HTTP –æ—à–∏–±–∫–∞ {e.code}: {e.reason}\")\n        return None\n        \n    except urllib.error.URLError as e:\n        print(f\"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e.reason}\")\n        return None\n        \n    except json.JSONDecodeError as e:\n        print(f\"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}\")\n        return None\n        \n    except Exception as e:\n        print(f\"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}\")\n        return None\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\nuser_data = fetch_user_data(123)\nif user_data:\n    print(f\"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\")\n```\n\n‚ö†Ô∏è **–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏**:\n- **–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è** –≤–º–µ—Å—Ç–æ –æ–±—â–∏—Ö\n- **–õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏** –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏\n- **–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –ø–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n- **–ù–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è** —Å `pass`\n- **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `except Exception`** —Ç–æ–ª—å–∫–æ –≤ –∫—Ä–∞–π–Ω–∏—Ö —Å–ª—É—á–∞—è—Ö\n- **–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö** –ø–µ—Ä–µ–¥ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏\n- **–¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫**",
    "title": "try/except"
}