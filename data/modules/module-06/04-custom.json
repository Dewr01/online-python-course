{
  "title": "–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è",
  "theory": "**–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è** ‚Äî —ç—Ç–æ –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–Ω—è—Ç–Ω–æ–π –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ –≤–∞—à–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö. –û–Ω–∏ –ø–æ–º–æ–≥–∞—é—Ç —Å–¥–µ–ª–∞—Ç—å –∫–æ–¥ –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–º –∏ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –æ—Ç–ª–∞–¥–∫—É!\nüîß **–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π**:\n\n**–ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ**:\n```python\nclass MyCustomError(Exception):\n    \"\"\"–ë–∞–∑–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ\"\"\"\n    pass\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\nraise MyCustomError(\"–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!\")\n```\n\n**–ò—Å–∫–ª—é—á–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏**:\n```python\nclass ValidationError(Exception):\n    \"\"\"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏\"\"\"\n    def __init__(self, message, field_name=None, value=None):\n        super().__init__(message)\n        self.field_name = field_name\n        self.value = value\n    \n    def __str__(self):\n        base_msg = super().__str__()\n        if self.field_name:\n            return f\"{base_msg} (–ø–æ–ª–µ: {self.field_name}, –∑–Ω–∞—á–µ–Ω–∏–µ: {self.value})\"\n        return base_msg\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\nraise ValidationError(\"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email\", \"email\", \"invalid-email\")\n```\n\n**–ò–µ—Ä–∞—Ä—Ö–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏–π**:\n```python\n# –ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\nclass AppError(Exception):\n    \"\"\"–ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\"\"\"\n    pass\n\n# –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–æ–¥—É–ª–µ–π\nclass DatabaseError(AppError):\n    \"\"\"–û—à–∏–±–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\"\"\"\n    pass\n\nclass NetworkError(AppError):\n    \"\"\"–û—à–∏–±–∫–∏ —Å–µ—Ç–∏\"\"\"\n    pass\n\nclass ValidationError(AppError):\n    \"\"\"–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏\"\"\"\n    pass\n\n# –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è\nclass ConnectionError(DatabaseError):\n    \"\"\"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î\"\"\"\n    pass\n\nclass QueryError(DatabaseError):\n    \"\"\"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞\"\"\"\n    pass\n\nclass TimeoutError(NetworkError):\n    \"\"\"–û—à–∏–±–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞\"\"\"\n    pass\n```\n\nüí° **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã**:\n\n**–°–∏—Å—Ç–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π**:\n```python\nclass UserValidationError(Exception):\n    \"\"\"–ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\"\"\"\n    pass\n\nclass InvalidEmailError(UserValidationError):\n    \"\"\"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email\"\"\"\n    def __init__(self, email):\n        self.email = email\n        super().__init__(f\"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email: {email}\")\n\nclass InvalidAgeError(UserValidationError):\n    \"\"\"–ù–µ–≤–µ—Ä–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç\"\"\"\n    def __init__(self, age):\n        self.age = age\n        super().__init__(f\"–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 150 –ª–µ—Ç, –ø–æ–ª—É—á–µ–Ω: {age}\")\n\nclass PasswordTooWeakError(UserValidationError):\n    \"\"\"–°–ª–∏—à–∫–æ–º —Å–ª–∞–±—ã–π –ø–∞—Ä–æ–ª—å\"\"\"\n    def __init__(self, password):\n        self.password = password\n        super().__init__(\"–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∞—è —Ü–∏—Ñ—Ä—ã –∏ –±—É–∫–≤—ã\")\n\ndef validate_user(email, age, password):\n    \"\"\"–í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\"\"\"\n    # –ü—Ä–æ–≤–µ—Ä–∫–∞ email\n    if '@' not in email or '.' not in email.split('@')[1]:\n        raise InvalidEmailError(email)\n    \n    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞\n    if not isinstance(age, int) or age < 0 or age > 150:\n        raise InvalidAgeError(age)\n    \n    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è\n    if len(password) < 8 or not any(c.isdigit() for c in password):\n        raise PasswordTooWeakError(password)\n    \n    return True\n\n# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\nusers = [\n    (\"user@example.com\", 25, \"strongpass123\"),\n    (\"invalid-email\", 30, \"weak\"),\n    (\"test@test.com\", -5, \"goodpass456\"),\n    (\"admin@site.com\", 40, \"12345678\")\n]\n\nfor email, age, password in users:\n    try:\n        validate_user(email, age, password)\n        print(f\"‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {email} –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é\")\n    except UserValidationError as e:\n        print(f\"‚úó –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}\")\n```\n\n**–°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤**:\n```python\nclass FileProcessingError(Exception):\n    \"\"\"–ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤\"\"\"\n    pass\n\nclass FileNotFoundError(FileProcessingError):\n    \"\"\"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω\"\"\"\n    def __init__(self, filename):\n        self.filename = filename\n        super().__init__(f\"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {filename}\")\n\nclass UnsupportedFileTypeError(FileProcessingError):\n    \"\"\"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞\"\"\"\n    def __init__(self, filename, file_type):\n        self.filename = filename\n        self.file_type = file_type\n        super().__init__(f\"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞ {file_type} –¥–ª—è —Ñ–∞–π–ª–∞ {filename}\")\n\nclass FileCorruptedError(FileProcessingError):\n    \"\"\"–§–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω\"\"\"\n    def __init__(self, filename, reason):\n        self.filename = filename\n        self.reason = reason\n        super().__init__(f\"–§–∞–π–ª {filename} –ø–æ–≤—Ä–µ–∂–¥–µ–Ω: {reason}\")\n\ndef process_file(filename):\n    \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏\"\"\"\n    import os\n    \n    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞\n    if not os.path.exists(filename):\n        raise FileNotFoundError(filename)\n    \n    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞\n    allowed_extensions = ['.txt', '.csv', '.json']\n    file_ext = os.path.splitext(filename)[1].lower()\n    if file_ext not in allowed_extensions:\n        raise UnsupportedFileTypeError(filename, file_ext)\n    \n    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞\n    file_size = os.path.getsize(filename)\n    if file_size == 0:\n        raise FileCorruptedError(filename, \"—Ñ–∞–π–ª –ø—É—Å—Ç–æ–π\")\n    \n    if file_size > 10 * 1024 * 1024:  # 10MB\n        raise FileProcessingError(f\"–§–∞–π–ª {filename} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π: {file_size} –±–∞–π—Ç\")\n    \n    # –°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏\n    print(f\"–§–∞–π–ª {filename} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω\")\n    return True\n\n# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\nfiles_to_process = [\n    \"data.txt\",\n    \"nonexistent.csv\",\n    \"image.jpg\",\n    \"empty.json\",\n    \"huge_file.txt\"\n]\n\nfor filename in files_to_process:\n    try:\n        process_file(filename)\n    except FileProcessingError as e:\n        print(f\"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞: {e}\")\n```\n\n**–°–∏—Å—Ç–µ–º–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π**:\n```python\nclass BankingError(Exception):\n    \"\"\"–ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã\"\"\"\n    pass\n\nclass InsufficientFundsError(BankingError):\n    \"\"\"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤\"\"\"\n    def __init__(self, account_id, balance, amount):\n        self.account_id = account_id\n        self.balance = balance\n        self.amount = amount\n        super().__init__(f\"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç–µ {account_id}. –ë–∞–ª–∞–Ω—Å: {balance}, —Ç—Ä–µ–±—É–µ—Ç—Å—è: {amount}\")\n\nclass InvalidAccountError(BankingError):\n    \"\"\"–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞\"\"\"\n    def __init__(self, account_id):\n        self.account_id = account_id\n        super().__init__(f\"–°—á–µ—Ç {account_id} –Ω–µ –Ω–∞–π–¥–µ–Ω\")\n\nclass TransactionLimitError(BankingError):\n    \"\"\"–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏\"\"\"\n    def __init__(self, amount, limit):\n        self.amount = amount\n        self.limit = limit\n        super().__init__(f\"–°—É–º–º–∞ {amount} –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç {limit}\")\n\nclass BankAccount:\n    def __init__(self, account_id, initial_balance=0, daily_limit=10000):\n        self.account_id = account_id\n        self.balance = initial_balance\n        self.daily_limit = daily_limit\n        self.daily_withdrawn = 0\n    \n    def withdraw(self, amount):\n        \"\"\"–°–Ω—è—Ç–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ —Å–æ —Å—á–µ—Ç–∞\"\"\"\n        if amount <= 0:\n            raise BankingError(\"–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π\")\n        \n        if amount > self.daily_limit:\n            raise TransactionLimitError(amount, self.daily_limit)\n        \n        if self.daily_withdrawn + amount > self.daily_limit:\n            raise TransactionLimitError(amount, self.daily_limit - self.daily_withdrawn)\n        \n        if amount > self.balance:\n            raise InsufficientFundsError(self.account_id, self.balance, amount)\n        \n        self.balance -= amount\n        self.daily_withdrawn += amount\n        print(f\"–°–Ω—è—Ç–æ {amount} —Å–æ —Å—á–µ—Ç–∞ {self.account_id}. –û—Å—Ç–∞—Ç–æ–∫: {self.balance}\")\n        return True\n    \n    def deposit(self, amount):\n        \"\"\"–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞\"\"\"\n        if amount <= 0:\n            raise BankingError(\"–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π\")\n        \n        self.balance += amount\n        print(f\"–ü–æ–ø–æ–ª–Ω–µ–Ω–æ {amount} –Ω–∞ —Å—á–µ—Ç {self.account_id}. –ë–∞–ª–∞–Ω—Å: {self.balance}\")\n        return True\n\n# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\naccount = BankAccount(\"12345\", 1000, 5000)\n\ntry:\n    account.withdraw(500)\n    account.withdraw(2000)\n    account.withdraw(3000)  # –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞\nexcept BankingError as e:\n    print(f\"–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}\")\n```\n\n**–°–∏—Å—Ç–µ–º–∞ API —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏**:\n```python\nclass APIError(Exception):\n    \"\"\"–ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ API\"\"\"\n    def __init__(self, message, status_code=None, response_data=None):\n        super().__init__(message)\n        self.status_code = status_code\n        self.response_data = response_data\n\nclass AuthenticationError(APIError):\n    \"\"\"–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏\"\"\"\n    def __init__(self, message=\"–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\"):\n        super().__init__(message, 401)\n\nclass RateLimitError(APIError):\n    \"\"\"–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤\"\"\"\n    def __init__(self, retry_after=None):\n        message = f\"–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —á–µ—Ä–µ–∑ {retry_after} —Å–µ–∫—É–Ω–¥\" if retry_after else \"–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤\"\n        super().__init__(message, 429)\n        self.retry_after = retry_after\n\nclass ValidationError(APIError):\n    \"\"\"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö\"\"\"\n    def __init__(self, field_errors):\n        self.field_errors = field_errors\n        message = f\"–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {field_errors}\"\n        super().__init__(message, 400)\n\ndef make_api_request(endpoint, data=None):\n    \"\"\"–í—ã–ø–æ–ª–Ω—è–µ—Ç API –∑–∞–ø—Ä–æ—Å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫\"\"\"\n    # –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—à–∏–±–∫–∏ API\n    if endpoint == \"/login\" and data.get(\"password\") != \"correct\":\n        raise AuthenticationError()\n    \n    if endpoint == \"/data\" and data and \"email\" not in data:\n        raise ValidationError({\"email\": \"–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ\"})\n    \n    if endpoint == \"/heavy\":\n        raise RateLimitError(60)\n    \n    print(f\"API –∑–∞–ø—Ä–æ—Å –∫ {endpoint} –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ\")\n    return {\"status\": \"success\"}\n\n# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\nrequests = [\n    (\"/login\", {\"username\": \"user\", \"password\": \"wrong\"}),\n    (\"/data\", {\"name\": \"John\"}),\n    (\"/heavy\", {}),\n    (\"/users\", {\"email\": \"user@example.com\"})\n]\n\nfor endpoint, data in requests:\n    try:\n        result = make_api_request(endpoint, data)\n        print(f\"‚úì {endpoint}: {result}\")\n    except APIError as e:\n        print(f\"‚úó {endpoint}: {e} (–∫–æ–¥: {e.status_code})\")\n```\n\n‚ö†Ô∏è **–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏–π**:\n- **–ù–∞—Å–ª–µ–¥—É–π—Ç–µ—Å—å –æ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞** (Exception, ValueError, RuntimeError)\n- **–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏–µ—Ä–∞—Ä—Ö–∏—é –∏—Å–∫–ª—é—á–µ–Ω–∏–π** –¥–ª—è –ª–æ–≥–∏—á–µ—Å–∫–æ–π –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏\n- **–î–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã** –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏\n- **–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–π—Ç–µ `__str__`** –¥–ª—è –ø–æ–Ω—è—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\n- **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞** –∫–ª–∞—Å—Å–æ–≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–π\n- **–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è** –≤ docstring\n- **–ù–µ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–π** ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑—É–º–Ω–æ\n- **–¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏—Å–∫–ª—é—á–µ–Ω–∏–π** –≤ –≤–∞—à–µ–º –∫–æ–¥–µ",
  "tasks": [
    {
      "id": "m6t13",
      "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ MyError?",
      "answer": "class MyError(Exception): pass",
      "hint": "–ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ç Exception."
    },
    {
      "id": "m6t14",
      "question": "–ö–∞–∫ –≤—ã–±—Ä–æ—Å–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ?",
      "answer": "raise MyError('message')",
      "hint": "raise –ò—Å–∫–ª—é—á–µ–Ω–∏–µ('—Å–æ–æ–±—â–µ–Ω–∏–µ')."
    },
    {
      "id": "m6t15",
      "question": "–û—Ç –∫–∞–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ –Ω–∞—Å–ª–µ–¥—É—é—Ç—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è?",
      "answer": "Exception",
      "hint": "–í—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–∞—Å–ª–µ–¥—É—é—Ç—Å—è –æ—Ç Exception."
    },
    {
      "id": "m6t16",
      "question": "–ú–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ? (–¥–∞/–Ω–µ—Ç)",
      "answer": "–¥–∞",
      "hint": "raise MyError('—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')."
    }
  ]
}