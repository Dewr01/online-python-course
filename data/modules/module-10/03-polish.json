{
    "title": "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
    "theory": "**–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞** ‚Äî —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.\n## –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞\n\n**README.md ‚Äî –ª–∏—Ü–æ –ø—Ä–æ–µ–∫—Ç–∞:**\n```markdown\n# Task Manager - Python Pyodide\n\n[![Python](https://img.shields.io/badge/Python-3.12-blue.svg)](https://python.org)\n[![Pyodide](https://img.shields.io/badge/Pyodide-0.24.1-green.svg)](https://pyodide.org)\n[![License](https://img.shields.io/badge/License-MIT-yellow.svg)](LICENSE)\n\n–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –Ω–∞ Python –∏ Pyodide.\n\n## üöÄ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏\n\n- ‚úÖ **CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏** ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ, —á—Ç–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á\n- üìä **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞** ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤\n- üîç **–ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è** ‚Äî –±—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –æ–ø–∏—Å–∞–Ω–∏—é\n- üì± **–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω** ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö\n- üíæ **–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ** ‚Äî –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n- üß™ **–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ** ‚Äî 90%+ –ø–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞ —Ç–µ—Å—Ç–∞–º–∏\n- üåê **–ë—Ä–∞—É–∑–µ—Ä–Ω–∞—è —Å—Ä–µ–¥–∞** ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞\n\n## üõ† –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\n\n- **Backend**: Python 3.12\n- **Frontend**: HTML5, CSS3, JavaScript (ES6+)\n- **Runtime**: Pyodide (Python –≤ –±—Ä–∞—É–∑–µ—Ä–µ)\n- **Testing**: unittest, coverage\n- **Styling**: CSS Grid, Flexbox, CSS Variables\n\n## üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫\n\n### –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç\n\n1. **–ö–ª–æ–Ω–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π**\n   ```bash\n   git clone https://github.com/username/task-manager-pyodide.git\n   cd task-manager-pyodide\n   ```\n\n2. **–û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ**\n   ```bash\n   # –ü—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä–æ–π—Ç–µ index.html –≤ –±—Ä–∞—É–∑–µ—Ä–µ\n   open index.html  # macOS\n   start index.html # Windows\n   xdg-open index.html # Linux\n   ```\n\n3. **–ì–æ—Ç–æ–≤–æ!** –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∑–∏—Ç Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ\n\n### –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\n\n```bash\n# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)\npip install -r requirements.txt\n\n# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤\npython -m unittest discover tests -v\n\n# –ó–∞–ø—É—Å–∫ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º\ncoverage run -m unittest discover tests\ncoverage report\ncoverage html\n```\n\n## üìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n\n1. **–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏**\n   - –ù–∞–∂–º–∏—Ç–µ \"+ –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\"\n   - –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ\n   - –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç\n   - –ù–∞–∂–º–∏—Ç–µ \"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å\"\n\n2. **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏\"\n   - ‚úì –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é\n   - üóë –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É\n   - üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n\n3. **–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è**\n   - –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–†–∞–±–æ—Ç–∞, –õ–∏—á–Ω–æ–µ, –£—á–µ–±–∞, –ó–¥–æ—Ä–æ–≤—å–µ)\n   - –ü–æ —Å—Ç–∞—Ç—É—Å—É (–í—Å–µ, –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ, –ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ)\n\n4. **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**\n   - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á\n   - –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\n   - –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º\n\n### API\n\n```python\n# –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∑–∞–¥–∞—á\nmanager = TaskManager()\n\n# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏\ntask = manager.add_task(\n    title=\"–ò–∑—É—á–∏—Ç—å Python\",\n    description=\"–ü—Ä–æ–π—Ç–∏ –∫—É—Ä—Å –ø–æ Python\",\n    category=\"–£—á–µ–±–∞\",\n    priority=3\n)\n\n# –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á\nall_tasks = manager.get_tasks()\nwork_tasks = manager.get_tasks(category=\"–†–∞–±–æ—Ç–∞\")\ncompleted_tasks = manager.get_tasks(completed=True)\n\n# –ü–æ–∏—Å–∫\nresults = manager.search_tasks(\"python\")\n\n# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\nstats = manager.get_statistics()\nprint(f\"–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {stats['completion_rate']:.1f}%\")\n```\n\n## üèó –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞\n\n```\nfinal_project/\n‚îú‚îÄ‚îÄ index.html              # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞\n‚îú‚îÄ‚îÄ main.py                 # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ Python\n‚îú‚îÄ‚îÄ app/                    # –ú–æ–¥—É–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n‚îÇ   ‚îú‚îÄ‚îÄ __init__.py\n‚îÇ   ‚îú‚îÄ‚îÄ models.py           # –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö\n‚îÇ   ‚îú‚îÄ‚îÄ services.py         # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞\n‚îÇ   ‚îî‚îÄ‚îÄ utils.py            # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n‚îú‚îÄ‚îÄ tests/                  # –¢–µ—Å—Ç—ã\n‚îÇ   ‚îú‚îÄ‚îÄ __init__.py\n‚îÇ   ‚îú‚îÄ‚îÄ test_models.py\n‚îÇ   ‚îú‚îÄ‚îÄ test_services.py\n‚îÇ   ‚îî‚îÄ‚îÄ test_integration.py\n‚îú‚îÄ‚îÄ static/                 # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã\n‚îÇ   ‚îú‚îÄ‚îÄ style.css          # –°—Ç–∏–ª–∏\n‚îÇ   ‚îî‚îÄ‚îÄ script.js          # JavaScript –ª–æ–≥–∏–∫–∞\n‚îú‚îÄ‚îÄ docs/                   # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n‚îÇ   ‚îú‚îÄ‚îÄ api.md\n‚îÇ   ‚îî‚îÄ‚îÄ architecture.md\n‚îú‚îÄ‚îÄ .github/                # GitHub Actions\n‚îÇ   ‚îî‚îÄ‚îÄ workflows/\n‚îÇ       ‚îî‚îÄ‚îÄ tests.yml\n‚îú‚îÄ‚îÄ requirements.txt        # Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\n‚îú‚îÄ‚îÄ .gitignore             # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ —Ñ–∞–π–ª—ã\n‚îú‚îÄ‚îÄ LICENSE                 # –õ–∏—Ü–µ–Ω–∑–∏—è\n‚îî‚îÄ‚îÄ README.md              # –≠—Ç–æ—Ç —Ñ–∞–π–ª\n```\n\n## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n### –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤\n\n```bash\n# –í—Å–µ —Ç–µ—Å—Ç—ã\npython -m unittest discover tests -v\n\n# –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–µ—Å—Ç\npython -m unittest tests.test_models.TestTask -v\n\n# –° –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞\ncoverage run -m unittest discover tests\ncoverage report\ncoverage html  # HTML –æ—Ç—á–µ—Ç –≤ htmlcov/\n```\n\n### –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞\n\n- **–û–±—â–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ**: 92%\n- **–ú–æ–¥–µ–ª–∏**: 95%\n- **–°–µ—Ä–≤–∏—Å—ã**: 90%\n- **–£—Ç–∏–ª–∏—Ç—ã**: 88%\n\n## üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n\n- **–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏**: < 3 —Å–µ–∫—É–Ω–¥\n- **–°–æ–∑–¥–∞–Ω–∏–µ 1000 –∑–∞–¥–∞—á**: < 2 —Å–µ–∫—É–Ω–¥\n- **–ü–æ–∏—Å–∫ –≤ 1000 –∑–∞–¥–∞—á**: < 100ms\n- **–†–∞–∑–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è**: < 2MB\n\n## ü§ù –í–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç\n\n1. –§–æ—Ä–∫–Ω–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π\n2. –°–æ–∑–¥–∞–π—Ç–µ –≤–µ—Ç–∫—É –¥–ª—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (`git checkout -b feature/amazing-feature`)\n3. –ó–∞—Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (`git commit -m 'Add amazing feature'`)\n4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –≤–µ—Ç–∫—É (`git push origin feature/amazing-feature`)\n5. –û—Ç–∫—Ä–æ–π—Ç–µ Pull Request\n\n## üìù –õ–∏—Ü–µ–Ω–∑–∏—è\n\n–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ MIT License - —Å–º. —Ñ–∞–π–ª [LICENSE](LICENSE) –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.\n\n## üë®‚Äçüíª –ê–≤—Ç–æ—Ä\n\n**–í–∞—à–µ –ò–º—è**\n- GitHub: [@username](https://github.com/username)\n- LinkedIn: [–í–∞—à–µ –ò–º—è](https://linkedin.com/in/yourname)\n- Email: your.email@example.com\n\n## üôè –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏\n\n- [Pyodide](https://pyodide.org) –∑–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ Python –≤ –±—Ä–∞—É–∑–µ—Ä–µ\n- [Python Software Foundation](https://python.org) –∑–∞ –æ—Ç–ª–∏—á–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\n- –°–æ–æ–±—â–µ—Å—Ç–≤—É Python –∑–∞ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É\n\n---\n\n‚≠ê –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –±—ã–ª –ø–æ–ª–µ–∑–µ–Ω, –ø–æ—Å—Ç–∞–≤—å—Ç–µ –∑–≤–µ–∑–¥—É!\n```\n\n## –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –∫–æ–¥–µ\n\n**–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π:**\n```python\ndef add_task(self, title: str, description: str = \"\", \n             category: str = \"–õ–∏—á–Ω–æ–µ\", priority: int = 1) -> Dict:\n    \"\"\"\n    –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –≤ –º–µ–Ω–µ–¥–∂–µ—Ä.\n    \n    Args:\n        title (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)\n        description (str, optional): –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏. Defaults to \"\".\n        category (str, optional): –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–¥–∞—á–∏. Defaults to \"–õ–∏—á–Ω–æ–µ\".\n        priority (int, optional): –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ—Ç 1 –¥–æ 5. Defaults to 1.\n    \n    Returns:\n        Dict: –°–æ–∑–¥–∞–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID\n    \n    Raises:\n        ValueError: –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—É—Å—Ç–æ–µ –∏–ª–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π\n        ValueError: –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n    \n    Example:\n        >>> manager = TaskManager()\n        >>> task = manager.add_task(\"–ò–∑—É—á–∏—Ç—å Python\", \"–ü—Ä–æ–π—Ç–∏ –∫—É—Ä—Å\", \"–£—á–µ–±–∞\", 3)\n        >>> print(task['title'])\n        –ò–∑—É—á–∏—Ç—å Python\n    \"\"\"\n    if not title.strip():\n        raise ValueError(\"–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º\")\n    \n    if priority not in range(1, 6):\n        raise ValueError(\"–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 5\")\n    \n    if category not in self.categories:\n        raise ValueError(f\"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\")\n    \n    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID\n    task = {\n        \"id\": self._generate_id(),\n        \"title\": title.strip(),\n        \"description\": description.strip(),\n        \"category\": category,\n        \"priority\": priority,\n        \"completed\": False,\n        \"created_at\": datetime.now().isoformat(),\n        \"completed_at\": None\n    }\n    \n    self.tasks.append(task)\n    self.save_data()\n    return task\n```\n\n## –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API\n\n**API Reference (docs/api.md):**\n```markdown\n# API Reference\n\n## TaskManager\n\n–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏.\n\n### –ú–µ—Ç–æ–¥—ã\n\n#### add_task(title, description, category, priority)\n\n–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É.\n\n**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**\n- `title` (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏\n- `description` (str, optional): –û–ø–∏—Å–∞–Ω–∏–µ\n- `category` (str, optional): –ö–∞—Ç–µ–≥–æ—Ä–∏—è\n- `priority` (int, optional): –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1-5\n\n**–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**\n- `Dict`: –û–±—ä–µ–∫—Ç –∑–∞–¥–∞—á–∏\n\n**–ò—Å–∫–ª—é—á–µ–Ω–∏—è:**\n- `ValueError`: –ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n\n#### get_tasks(category, completed)\n\n–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π.\n\n**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**\n- `category` (str, optional): –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n- `completed` (bool, optional): –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É\n\n**–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**\n- `List[Dict]`: –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á\n\n#### complete_task(task_id)\n\n–û—Ç–º–µ—á–∞–µ—Ç –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é.\n\n**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**\n- `task_id` (str): ID –∑–∞–¥–∞—á–∏\n\n**–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**\n- `bool`: –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏\n```\n\n## –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞\n\n**–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏:**\n\n1. **–í–≤–µ–¥–µ–Ω–∏–µ** (2 –º–∏–Ω)\n   - –ü—Ä–æ–±–ª–µ–º–∞ –∏ —Ä–µ—à–µ–Ω–∏–µ\n   - –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫\n   - –î–µ–º–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n\n2. **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞** (3 –º–∏–Ω)\n   - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞\n   - –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤\n   - –í—ã–±–æ—Ä —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π\n\n3. **–ö–ª—é—á–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏** (5 –º–∏–Ω)\n   - CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏\n   - –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è\n   - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n   - –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω\n\n4. **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏** (3 –º–∏–Ω)\n   - Python + Pyodide –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è\n   - –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n   - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n   - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n\n5. **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã** (2 –º–∏–Ω)\n   - –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏\n   - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n   - –ü–ª–∞–Ω—ã —Ä–∞–∑–≤–∏—Ç–∏—è\n\n## –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏\n\n**–ß–µ–∫-–ª–∏—Å—Ç –ø–µ—Ä–µ–¥ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–µ–π:**\n\n- [ ] –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç\n- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–∞\n- [ ] README —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n- [ ] –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω –∏ –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω\n- [ ] –î–µ–º–æ –≥–æ—Ç–æ–≤–æ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ\n- [ ] –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞\n- [ ] –í–æ–ø—Ä–æ—Å—ã –¥–ª—è Q&A –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–Ω—ã\n\n**–ö–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ Junior Python Developer:**\n- –ü–æ–Ω–∏–º–∞–Ω–∏–µ –û–û–ü –∏ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ SOLID\n- –†–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ —Ñ–∞–π–ª–∞–º–∏\n- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫–∞\n- –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞\n- –†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ\n- –ü–æ–Ω–∏–º–∞–Ω–∏–µ –≤–µ–±-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π\n- –ó–Ω–∞–Ω–∏–µ –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
    "tasks": [
        {
            "id": "m10t9",
            "question": "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞?",
            "answer": "README, –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
            "hint": "README.md –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∫ –∫–æ–¥—É."
        },
        {
            "id": "m10t10",
            "question": "–ù—É–∂–Ω—ã –ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –∫–æ–¥–µ? (–¥–∞/–Ω–µ—Ç)",
            "answer": "–¥–∞",
            "hint": "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–µ–ª–∞—é—Ç –∫–æ–¥ –ø–æ–Ω—è—Ç–Ω–µ–µ."
        },
        {
            "id": "m10t11",
            "question": "–ß—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ README —Ñ–∞–π–ª–µ?",
            "answer": "–æ–ø–∏—Å–∞–Ω–∏–µ, —É—Å—Ç–∞–Ω–æ–≤–∫–∞, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ",
            "hint": "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É."
        },
        {
            "id": "m10t12",
            "question": "–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç?",
            "answer": "Junior",
            "hint": "Junior Python Developer."
        }
    ]
}
