{
    "tasks": [
        {
            "answer": "['hello', 'world']",
            "hint": "split() —Ä–∞–∑–¥–µ–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –ø–æ –ø—Ä–æ–±–µ–ª–∞–º.",
            "id": "m5t1",
            "question": "–ß—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è –ø—Ä–∏ 'hello world'.split()?"
        },
        {
            "answer": "a b",
            "hint": "join() –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å.",
            "id": "m5t2",
            "question": "–ß—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è –ø—Ä–∏ ' '.join(['a', 'b'])?"
        },
        {
            "answer": "hello",
            "hint": "strip() —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏.",
            "id": "m5t3",
            "question": "–ß—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è –ø—Ä–∏ '  hello  '.strip()?"
        },
        {
            "answer": "hello",
            "hint": "lower() –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.",
            "id": "m5t4",
            "question": "–ß—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è –ø—Ä–∏ 'Hello'.lower()?"
        }
    ],
    "theory": "**–ú–µ—Ç–æ–¥—ã —Å—Ç—Ä–æ–∫** ‚Äî —ç—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–º –≤ Python. –°—Ç—Ä–æ–∫–∏ –≤ Python –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ (immutable), –ø–æ—ç—Ç–æ–º—É –º–µ—Ç–æ–¥—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏!\nüîß **–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å—Ç—Ä–æ–∫**:\n\n**–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ**:\n```python\ntext = \"–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! –ö–∞–∫ –¥–µ–ª–∞?\"\n\n# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–æ–±–µ–ª–∞–º\nwords = text.split()\nprint(words)  # ['–ü—Ä–∏–≤–µ—Ç,', '–º–∏—Ä!', '–ö–∞–∫', '–¥–µ–ª–∞?']\n\n# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∑–∞–ø—è—Ç–æ–π\nparts = text.split(',')\nprint(parts)  # ['–ü—Ä–∏–≤–µ—Ç', ' –º–∏—Ä! –ö–∞–∫ –¥–µ–ª–∞?']\n\n# –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ\njoined = ' '.join(words)\nprint(joined)  # –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! –ö–∞–∫ –¥–µ–ª–∞?\n\n# –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º\njoined_dash = '-'.join(words)\nprint(joined_dash)  # –ü—Ä–∏–≤–µ—Ç,-–º–∏—Ä!-–ö–∞–∫-–¥–µ–ª–∞?\n```\n\n**–û—á–∏—Å—Ç–∫–∞ –æ—Ç –ø—Ä–æ–±–µ–ª–æ–≤**:\n```python\nmessy_text = \"  \\n  –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!  \\t  \"\n\n# –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤ —Å –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞\nclean = messy_text.strip()\nprint(f\"'{clean}'\")  # '–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!'\n\n# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å–ª–µ–≤–∞\nleft_clean = messy_text.lstrip()\nprint(f\"'{left_clean}'\")  # '–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!  \\t  '\n\n# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å–ø—Ä–∞–≤–∞\nright_clean = messy_text.rstrip()\nprint(f\"'{right_clean}'\")  # '  \\n  –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!'\n```\n\n**–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞**:\n```python\nname = \"–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞\"\n\nprint(name.upper())    # –ê–ù–ù–ê –ü–ï–¢–†–û–í–ê\nprint(name.lower())    # –∞–Ω–Ω–∞ –ø–µ—Ç—Ä–æ–≤–∞\nprint(name.title())    # –ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞\nprint(name.capitalize()) # –ê–Ω–Ω–∞ –ø–µ—Ç—Ä–æ–≤–∞\nprint(name.swapcase())  # –∞–ù–ù–ê –ø–ï–¢–†–û–í–ê\n```\n\n**–ü–æ–∏—Å–∫ –∏ –∑–∞–º–µ–Ω–∞**:\n```python\ntext = \"Python ‚Äî –æ—Ç–ª–∏—á–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\"\n\n# –ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏\npos = text.find(\"Python\")\nprint(pos)  # 0 (–ø–æ–∑–∏—Ü–∏—è –Ω–∞—á–∞–ª–∞)\n\npos = text.find(\"Java\")\nprint(pos)  # -1 (–Ω–µ –Ω–∞–π–¥–µ–Ω–æ)\n\n# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞\nprint(text.startswith(\"Python\"))  # True\nprint(text.endswith(\"–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\"))  # True\n\n# –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—Å—Ç–∞\nnew_text = text.replace(\"Python\", \"JavaScript\")\nprint(new_text)  # JavaScript ‚Äî –æ—Ç–ª–∏—á–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\n\n# –ó–∞–º–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è\nfirst_replace = text.replace(\"–∞\", \"–æ\", 1)\nprint(first_replace)  # Python ‚Äî –æ—Ç–ª–∏—á–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–æ–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\n```\n\n**–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ**:\n```python\nemail = \"user@example.com\"\nnumber = \"12345\"\nspaces = \"   \"\n\n# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Å–∏–º–≤–æ–ª–æ–≤\nprint(email.isalnum())    # False (—Å–æ–¥–µ—Ä–∂–∏—Ç @ –∏ .)\nprint(number.isdigit())   # True\nprint(number.isnumeric()) # True\nprint(spaces.isspace())   # True\nprint(email.islower())    # True\nprint(\"HELLO\".isupper())  # True\n```\n\nüí° **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã**:\n\n**–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞**:\n```python\ndef clean_user_input(text):\n    \"\"\"–û—á–∏—â–∞–µ—Ç –∏ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥\"\"\"\n    # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã\n    cleaned = text.strip()\n    \n    # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É\n    cleaned = cleaned.lower()\n    \n    # –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ\n    cleaned = ' '.join(cleaned.split())\n    \n    return cleaned\n\nuser_input = \"  –ü–†–ò–í–ï–¢    –ú–ò–†!  \"\nclean_input = clean_user_input(user_input)\nprint(f\"'{clean_input}'\")  # '–ø—Ä–∏–≤–µ—Ç –º–∏—Ä!'\n```\n\n**–ü–∞—Ä—Å–∏–Ω–≥ CSV –¥–∞–Ω–Ω—ã—Ö**:\n```python\ndef parse_csv_line(line):\n    \"\"\"–ü–∞—Ä—Å–∏—Ç —Å—Ç—Ä–æ–∫—É CSV\"\"\"\n    # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ –∑–∞–ø—è—Ç—ã–º\n    fields = line.split(',')\n    \n    # –û—á–∏—â–∞–µ–º –∫–∞–∂–¥–æ–µ –ø–æ–ª–µ –æ—Ç –ø—Ä–æ–±–µ–ª–æ–≤\n    clean_fields = [field.strip() for field in fields]\n    \n    return clean_fields\n\ncsv_line = \"–ò–≤–∞–Ω, 25, –ú–æ—Å–∫–≤–∞, –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç\"\nparsed = parse_csv_line(csv_line)\nprint(parsed)  # ['–ò–≤–∞–Ω', '25', '–ú–æ—Å–∫–≤–∞', '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç']\n```\n\n**–í–∞–ª–∏–¥–∞—Ü–∏—è email**:\n```python\ndef is_valid_email(email):\n    \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑–æ–≤—É—é –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å email\"\"\"\n    email = email.strip().lower()\n    \n    # –î–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å @\n    if '@' not in email:\n        return False\n    \n    # –î–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ—á–∫—É –ø–æ—Å–ª–µ @\n    if '.' not in email.split('@')[1]:\n        return False\n    \n    # –ù–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã\n    if ' ' in email:\n        return False\n    \n    return True\n\nprint(is_valid_email(\"user@example.com\"))  # True\nprint(is_valid_email(\"invalid-email\"))     # False\nprint(is_valid_email(\"user @example.com\")) # False\n```\n\n**–ü–æ–¥—Å—á–µ—Ç —Å–ª–æ–≤**:\n```python\ndef count_words(text):\n    \"\"\"–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ\"\"\"\n    # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ –ø—Ä–æ–±–µ–ª–∞–º –∏ —É–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏\n    words = [word for word in text.split() if word]\n    return len(words)\n\ndef count_sentences(text):\n    \"\"\"–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π\"\"\"\n    # –°—á–∏—Ç–∞–µ–º —Ç–æ—á–∫–∏, –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∏ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏\n    sentences = text.count('.') + text.count('!') + text.count('?')\n    return sentences\n\narticle = \"Python ‚Äî –æ—Ç–ª–∏—á–Ω—ã–π —è–∑—ã–∫! –û–Ω –ø—Ä–æ—Å—Ç–æ–π –∏ –º–æ—â–Ω—ã–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ–≥–æ!\"\nprint(f\"–°–ª–æ–≤: {count_words(article)}\")      # –°–ª–æ–≤: 9\nprint(f\"–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {count_sentences(article)}\")  # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: 3\n```\n\n**–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞**:\n```python\ndef format_phone(phone):\n    \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\"\"\"\n    # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã\n    digits = ''.join([c for c in phone if c.isdigit()])\n    \n    if len(digits) == 11 and digits.startswith('7'):\n        # –†–æ—Å—Å–∏–π—Å–∫–∏–π –Ω–æ–º–µ—Ä: +7 (XXX) XXX-XX-XX\n        return f\"+7 ({digits[1:4]}) {digits[4:7]}-{digits[7:9]}-{digits[9:11]}\"\n    elif len(digits) == 10:\n        # –ù–æ–º–µ—Ä –±–µ–∑ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã: (XXX) XXX-XX-XX\n        return f\"({digits[0:3]}) {digits[3:6]}-{digits[6:8]}-{digits[8:10]}\"\n    else:\n        return \"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞\"\n\nprint(format_phone(\"8-999-123-45-67\"))    # +7 (999) 123-45-67\nprint(format_phone(\"9991234567\"))          # (999) 123-45-67\nprint(format_phone(\"123\"))                 # –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞\n```\n\n‚ö†Ô∏è **–í–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å**:\n- –°—Ç—Ä–æ–∫–∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ ‚Äî –º–µ—Ç–æ–¥—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏\n- –ú–µ—Ç–æ–¥—ã —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É\n- `find()` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1 –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n- `split()` –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑–¥–µ–ª—è–µ—Ç –ø–æ –ª—é–±—ã–º –ø—Ä–æ–±–µ–ª—å–Ω—ã–º —Å–∏–º–≤–æ–ª–∞–º\n- `strip()` —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã, —Ç–∞–±—É–ª—è—Ü–∏–∏ –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫",
    "title": "–ú–µ—Ç–æ–¥—ã —Å—Ç—Ä–æ–∫"
}